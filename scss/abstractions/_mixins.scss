/*
 
  Mixins

  Global mixins

  Author: Felipe Arosemena
  Date: 12 Aug 2014

*/
 
@mixin margin-above($proportion: 1) {
    margin-top: $base-spacing-unit * $proportion;
}

// Add a uniform bottom spacing to an element, same as spacing under paragraphs, list elements, etc
@mixin margin-trailer($proportion: 1) {
    margin-bottom: $base-spacing-unit * $proportion;
}

@mixin padding-trailer($proportion: 1) {
    padding-bottom: $base-spacing-unit * $proportion;
}

// Use REMs with a pixel fallback for font sizing.
@mixin font-size($font-size, $line-height:true){
    font-size:$font-size;
    font-size:($font-size / $base-font-size)*1rem;
    @if $line-height == true{
        line-height:ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
    }
}

@function get-input-height($proportion: 1) {
    @return $base-input-height * $proportion;
}
 
@function px-to-em($val) {
    @return $val / $base-font-size * 1em;
}

// Media Query Mixin
// Use to create a breakpoint, ideally using predefined breakpoint variables
// For each project, you can create additional breakpoints if required

@mixin breakpoint($media-query) {
    @media only screen and (max-width: $media-query) {
        @content;
    }
}

// Make sure you are using a variable for this breakpoint

@mixin breakpoint-min($media-query) {
    @media only screen and (min-width: $media-query + 1px) {
        @content;
    }
}

@mixin breakpoint-between($min, $max) {
    @media only screen and (min-width: $min + 1px) and (max-width: $max) {
        @content;
    }
}

// Hides text in an element by squishing the text into oblivion. 
// Use this if you need to hide text contained in an inline element but still have it read by a screen reader.

@mixin squish-text {
    font: 0/0 serif;
    text-shadow: none;
    color: transparent;
}

// Hide elements from all users.//
// Used for elements which should not be immediately displayed to any user. An
// example would be a collapsible fieldset that will be expanded with a click
// from a user. The effect of this class can be toggled with the jQuery show()
// and hide() functions.
@mixin element-hidden {
    display: none;
}

// Mixin for .grid with percentage base gutters
// Need a formula to calculate a more accurate offset for the grid element
@mixin fluid-grid($gutter) {
    margin-left: -(0.01202 * $gutter * $gutter / 1% + 0.98955 * $gutter + 0.01483%);
}

// Z-index mixin
// Pass in an integer from 1-10, the output will be multiplied by 100.
// You can pass the element's positioning as a second parameter, defaults to 'relative'
@mixin z-index($z-index, $position: relative) {
    z-index: $z-index * 100;
    position: $position;
}

// Limits the text of a block element to a single line,
// cropping the overflow and adding an elipsis
@mixin shorten-text {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}